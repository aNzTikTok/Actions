#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Build Armsr

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_soc:
        description: 'PACKAGE_SOC for packit action, default value is s905d(N1) & qemu'
        required: false
        default: 's905d_qeum'
        type: choice
        options: 
          - vplus
          - cm3
          - jp-tvbox
          - beikeyun
          - l1pro
          - rock5b
          - rock5c
          - e52c
          - e54c
          - r66s
          - r68s
          - h88k
          - h88k-v3
          - ak88
          - ht2
          - e20c
          - h28k
          - h66k
          - h68k
          - h69k
          - h69k-max
          - e25
          - photonicat
          - watermelon-pi
          - zcube1-max
          - rk3399
          - s905
          - s905d
          - s905x2
          - s905x3
          - s912
          - s922x
          - s922x-n2
          - qemu
          - diy
          - all
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "6.6.y_6.12.y"
        type: choice
        options:
          - 5.4.y
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 6.12.y
          - 5.4.y_5.10.y
          - 5.15.y_6.1.y
          - 6.1.y_6.12.y
          - 6.1.y_6.6.y
          - 6.6.y_6.12.y
  #schedule:
    #- cron: '0 17 * * *'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  TARGET_NAME: armsr
  PACKAGE_SOC: ${{ github.event.inputs.openwrt_soc }}
  FEEDS_CONF: armsr/feeds.conf
  CONFIG_FILE: armsr/.config
  DIY_P1_SH: armsr/diy-part1.sh
  DIY_P2_SH: armsr/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  FREE_DISK_SPACE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Free Disk Space (Ubuntu)
      if: env.FREE_DISK_SPACE == 'true' && (!cancelled())
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir

    - name: Clone source code
      working-directory: /mnt/workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET_DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' | tr '\n' '/' | sed -r 's/\/$//' > DEVICE_NAME
        echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%y.%m.%d")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory as Artifacts
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: Immortalwrt_bin_${{ env.TARGET_NAME }}_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory as Artifacts
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: Immortalwrt_firmware_${{ env.TARGET_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=v${{ env.FILE_DATE }}" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload armsr firmware to release
      uses: softprops/action-gh-release@master
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TARGET_NAME }}
        body: |
          Target: ${{ env.TARGET_NAME }}
          Device(s): ${{ env.DEVICE_NAME }}
          Default IP: 192.168.199.253
          Default password: NULL
          Luci App installed:
            - amlogic
            - frpc
            - mosdns
            - openclash
            - ttyd
            - vlmcsd(KMS)
        files: ${{ env.FIRMWARE }}/*

    - name: Package OpenWrt Firmware
      uses: ophub/flippy-openwrt-actions@main
      env:
          OPENWRT_ARMVIRT: ${{ env.FIRMWARE }}/*.rootfs.img.gz
          PACKAGE_SOC: ${{ env.PACKAGE_SOC }}
          KERNEL_VERSION_NAME: ${{ github.event.inputs.openwrt_kernel }}
  
    - name: Upload package firmware to release
      uses: softprops/action-gh-release@master
      if:  env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: immortalwrt_armsr_${{ env.PACKAGE_SOC }}_${{ env.PACKAGED_OUTPUTDATE }}
          body: |
            Target: ${{ env.TARGET_NAME }}
            Device(s): ${{ env.PACKAGE_SOC }}
            Default IP: 192.168.199.253
            Default password: NULL
            Luci App installed:
              - amlogic
              - frpc
              - mosdns
              - openclash
              - ttyd
              - vlmcsd(KMS)
          files: ${{ env.PACKAGED_OUTPUTPATH }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        delete_workflow_pattern: ${{ env.PACKAGE_SOC }}
        retain_days: 7
        keep_minimum_runs: 2

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
        delete_tag_pattern: ${{ env.PACKAGE_SOC }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
